//  3         2         1         0
// 10987654321098765432109876543210
// IIIIIIIIIIIIIIIIIIIIRRRRR0110111 lui rd,imm                         # rv32i
// IIIIIIIIIIIIIIIIIIIIRRRRR0010111 auipc rd,imm                       # rv32i
// DDDDDDDDDDDDDDDDDDDDRRRRR1101111 jal rd,disp                        # rv32i
// IIIIIIIIIIIIRRRRR000RRRRR1100111 jalr rd,rs1,imm                    # rv32i
// DDDDDDDRRRRRRRRRR000DDDDD1100011 beq rs1,rs2,disp                   # rv32i
// DDDDDDDRRRRRRRRRR001DDDDD1100011 bne rs1,rs2,disp                   # rv32i
// DDDDDDDRRRRRRRRRR100DDDDD1100011 blt rs1,rs2,disp                   # rv32i
// DDDDDDDRRRRRRRRRR101DDDDD1100011 bge rs1,rs2,disp                   # rv32i
// DDDDDDDRRRRRRRRRR110DDDDD1100011 bltu rs1,rs2,disp                  # rv32i
// DDDDDDDRRRRRRRRRR111DDDDD1100011 bgeu rs1,rs2,disp                  # rv32i
// IIIIIIIIIIIIRRRRR000RRRRR0000011 lb rd,imm(rs1)                     # rv32i
// IIIIIIIIIIIIRRRRR001RRRRR0000011 lh rd,imm(rs1)                     # rv32i
// IIIIIIIIIIIIRRRRR010RRRRR0000011 lw rd,imm(rs1)                     # rv32i
// IIIIIIIIIIIIRRRRR100RRRRR0000011 lbu rd,imm(rs1)                    # rv32i
// IIIIIIIIIIIIRRRRR101RRRRR0000011 lhu rd,imm(rs1)                    # rv32i
// IIIIIIIRRRRRRRRRR000IIIII0100011 sb rs2,imm(rs1)                    # rv32i
// IIIIIIIRRRRRRRRRR001IIIII0100011 sh rs2,imm(rs1)                    # rv32i
// IIIIIIIRRRRRRRRRR010IIIII0100011 sw rs2,imm(rs1)                    # rv32i
// IIIIIIIIIIIIRRRRR000RRRRR0010011 addi rd,rs1,imm                    # rv32i
// IIIIIIIIIIIIRRRRR010RRRRR0010011 slti rd,rs1,imm                    # rv32i
// IIIIIIIIIIIIRRRRR011RRRRR0010011 sltiu rd,rs1,imm                   # rv32i
// IIIIIIIIIIIIRRRRR100RRRRR0010011 xori rd,rs1,imm                    # rv32i
//  3         2         1         0
// 10987654321098765432109876543210
// IIIIIIIIIIIIRRRRR110RRRRR0010011 ori rd,rs1,imm                     # rv32i
// IIIIIIIIIIIIRRRRR111RRRRR0010011 andi rd,rs1,imm                    # rv32i
// 0000000RRRRRRRRRR000RRRRR0110011 add rd,rs1,rs2                     # rv32i
// 0100000RRRRRRRRRR000RRRRR0110011 sub rd,rs1,rs2                     # rv32i
// 0000000RRRRRRRRRR001RRRRR0110011 sll rd,rs1,rs2                     # rv32i
// 0000000RRRRRRRRRR010RRRRR0110011 slt rd,rs1,rs2                     # rv32i
// 0000000RRRRRRRRRR011RRRRR0110011 sltu rd,rs1,rs2                    # rv32i
// 0000000RRRRRRRRRR100RRRRR0110011 xor rd,rs1,rs2                     # rv32i
// 0000000RRRRRRRRRR101RRRRR0110011 srl rd,rs1,rs2                     # rv32i
// 0100000RRRRRRRRRR101RRRRR0110011 sra rd,rs1,rs2                     # rv32i
// 0000000RRRRRRRRRR110RRRRR0110011 or rd,rs1,rs2                      # rv32i
// 0000000RRRRRRRRRR111RRRRR0110011 and rd,rs1,rs2                     # rv32i
// ....AAAAAAAA.....000.....0001111 fence                              # rv32i
// .................001.....0001111 fence.i                            # rv32i
// IIIIIIIIIIIIRRRRR110RRRRR0000011 lwu rd,imm(rs1)                    # rv64i
// IIIIIIIIIIIIRRRRR011RRRRR0000011 ld rd,imm(rs1)                     # rv64i
// IIIIIIIRRRRRRRRRR011IIIII0100011 sd rs2,imm(rs1)                    # rv64i
// 000000IIIIIIRRRRR001RRRRR0010011 slli rd,rs1,imm                    # rv64i
// 000000IIIIIIRRRRR101RRRRR0010011 srli rd,rs1,imm                    # rv64i
// 010000IIIIIIRRRRR101RRRRR0010011 srai rd,rs1,imm                    # rv64i
// IIIIIIIIIIIIRRRRR000RRRRR0011011 addiw rd,rs1,imm                   # rv64i
// 0000000IIIIIRRRRR001RRRRR0011011 slliw rd,rs1,imm                   # rv64i
//  3         2         1         0
// 10987654321098765432109876543210
// 0000000IIIIIRRRRR101RRRRR0011011 srliw rd,rs1,imm                   # rv64i
// 0100000IIIIIRRRRR101RRRRR0011011 sraiw rd,rs1,imm                   # rv64i
// 0000000RRRRRRRRRR000RRRRR0111011 addw rd,rs1,rs2                    # rv64i
// 0100000RRRRRRRRRR000RRRRR0111011 subw rd,rs1,rs2                    # rv64i
// 0000000RRRRRRRRRR001RRRRR0111011 sllw rd,rs1,rs2                    # rv64i
// 0000000RRRRRRRRRR101RRRRR0111011 srlw rd,rs1,rs2                    # rv64i
// 0100000RRRRRRRRRR101RRRRR0111011 sraw rd,rs1,rs2                    # rv64i
// 0000001RRRRRRRRRR000RRRRR0110011 mul rd,rs1,rs2                     # rv32m
// 0000001RRRRRRRRRR001RRRRR0110011 mulh rd,rs1,rs2                    # rv32m
// 0000001RRRRRRRRRR010RRRRR0110011 mulhsu rd,rs1,rs2                  # rv32m
// 0000001RRRRRRRRRR011RRRRR0110011 mulhu rd,rs1,rs2                   # rv32m
// 0000001RRRRRRRRRR100RRRRR0110011 div rd,rs1,rs2                     # rv32m
// 0000001RRRRRRRRRR101RRRRR0110011 divu rd,rs1,rs2                    # rv32m
// 0000001RRRRRRRRRR110RRRRR0110011 rem rd,rs1,rs2                     # rv32m
// 0000001RRRRRRRRRR111RRRRR0110011 remu rd,rs1,rs2                    # rv32m
// 0000001RRRRRRRRRR000RRRRR0111011 mulw rd,rs1,rs2                    # rv64m
// 0000001RRRRRRRRRR100RRRRR0111011 divw rd,rs1,rs2                    # rv64m
// 0000001RRRRRRRRRR101RRRRR0111011 divuw rd,rs1,rs2                   # rv64m
// 0000001RRRRRRRRRR110RRRRR0111011 remw rd,rs1,rs2                    # rv64m
// 0000001RRRRRRRRRR111RRRRR0111011 remuw rd,rs1,rs2                   # rv64m
// 00010AA00000RRRRR010RRRRR0101111 lr.w rd,(rs1)                      # rv32a
// 00011AARRRRRRRRRR010RRRRR0101111 sc.w rd,rs2,(rs1)                  # rv32a
//  3         2         1         0
// 10987654321098765432109876543210
// 00001AARRRRRRRRRR010RRRRR0101111 amoswap.w rd,rs2,(rs1)             # rv32a
// 00000AARRRRRRRRRR010RRRRR0101111 amoadd.w rd,rs2,(rs1)              # rv32a
// 00100AARRRRRRRRRR010RRRRR0101111 amoxor.w rd,rs2,(rs1)              # rv32a
// 01000AARRRRRRRRRR010RRRRR0101111 amoor.w rd,rs2,(rs1)               # rv32a
// 01100AARRRRRRRRRR010RRRRR0101111 amoand.w rd,rs2,(rs1)              # rv32a
// 10000AARRRRRRRRRR010RRRRR0101111 amomin.w rd,rs2,(rs1)              # rv32a
// 10100AARRRRRRRRRR010RRRRR0101111 amomax.w rd,rs2,(rs1)              # rv32a
// 11000AARRRRRRRRRR010RRRRR0101111 amominu.w rd,rs2,(rs1)             # rv32a
// 11100AARRRRRRRRRR010RRRRR0101111 amomaxu.w rd,rs2,(rs1)             # rv32a
// 00010AA00000RRRRR011RRRRR0101111 lr.d rd,(rs1)                      # rv64a
// 00011AARRRRRRRRRR011RRRRR0101111 sc.d rd,rs2,(rs1)                  # rv64a
// 00001AARRRRRRRRRR011RRRRR0101111 amoswap.d rd,rs2,(rs1)             # rv64a
// 00000AARRRRRRRRRR011RRRRR0101111 amoadd.d rd,rs2,(rs1)              # rv64a
// 00100AARRRRRRRRRR011RRRRR0101111 amoxor.d rd,rs2,(rs1)              # rv64a
// 01000AARRRRRRRRRR011RRRRR0101111 amoor.d rd,rs2,(rs1)               # rv64a
// 01100AARRRRRRRRRR011RRRRR0101111 amoand.d rd,rs2,(rs1)              # rv64a
// 10000AARRRRRRRRRR011RRRRR0101111 amomin.d rd,rs2,(rs1)              # rv64a
// 10100AARRRRRRRRRR011RRRRR0101111 amomax.d rd,rs2,(rs1)              # rv64a
// 11000AARRRRRRRRRR011RRRRR0101111 amominu.d rd,rs2,(rs1)             # rv64a
// 11100AARRRRRRRRRR011RRRRR0101111 amomaxu.d rd,rs2,(rs1)             # rv64a
// IIIIIIIIIIIIRRRRR010RRRRR0000111 flw frd,imm(rs1)                   # rv32f
// IIIIIIIRRRRRRRRRR010IIIII0100111 fsw frs2,imm(rs1)                  # rv32f
//  3         2         1         0
// 10987654321098765432109876543210
// RRRRR00RRRRRRRRRRAAARRRRR1000011 fmadd.s frd,frs1,frs2,frs3         # rv32f
// RRRRR00RRRRRRRRRRAAARRRRR1000111 fmsub.s frd,frs1,frs2,frs3         # rv32f
// RRRRR00RRRRRRRRRRAAARRRRR1001011 fnmsub.s frd,frs1,frs2,frs3        # rv32f
// RRRRR00RRRRRRRRRRAAARRRRR1001111 fnmadd.s frd,frs1,frs2,frs3        # rv32f
// 0000000RRRRRRRRRRAAARRRRR1010011 fadd.s frd,frs1,frs2               # rv32f
// 0000100RRRRRRRRRRAAARRRRR1010011 fsub.s frd,frs1,frs2               # rv32f
// 0001000RRRRRRRRRRAAARRRRR1010011 fmul.s frd,frs1,frs2               # rv32f
// 0001100RRRRRRRRRRAAARRRRR1010011 fdiv.s frd,frs1,frs2               # rv32f
// 0010000RRRRRRRRRR000RRRRR1010011 fsgnj.s frd,frs1,frs2              # rv32f
// 0010000RRRRRRRRRR001RRRRR1010011 fsgnjn.s frd,frs1,frs2             # rv32f
// 0010000RRRRRRRRRR010RRRRR1010011 fsgnjx.s frd,frs1,frs2             # rv32f
// 0010100RRRRRRRRRR000RRRRR1010011 fmin.s frd,frs1,frs2               # rv32f
// 0010100RRRRRRRRRR001RRRRR1010011 fmax.s frd,frs1,frs2               # rv32f
// 010110000000RRRRRAAARRRRR1010011 fsqrt.s frd,frs1,frs2              # rv32f
// 1010000RRRRRRRRRR000RRRRR1010011 fle.s frd,rs1,frs2                 # rv32f
// 1010000RRRRRRRRRR001RRRRR1010011 flt.s frd,rs1,frs2                 # rv32f
// 1010000RRRRRRRRRR010RRRRR1010011 feq.s frd,rs1,frs2                 # rv32f
// 110000000000RRRRRAAARRRRR1010011 fcvt.w.s rd,frs1                   # rv32f
// 110000000001RRRRRAAARRRRR1010011 fcvt.wu.s rd,frs1                  # rv32f
// 110100000000RRRRRAAARRRRR1010011 fcvt.s.w frd,rs1                   # rv32f
// 110100000001RRRRRAAARRRRR1010011 fcvt.s.wu frd,rs1                  # rv32f
// 111000000000RRRRR000RRRRR1010011 fmv.x.s rd,frs1                    # rv32f
//  3         2         1         0
// 10987654321098765432109876543210
// 111000000000RRRRR001RRRRR1010011 fclass.s rd,frs1                   # rv32f
// 111100000000RRRRR000RRRRR1010011 fmv.s.x frd,rs1                    # rv32f
// 110000000010RRRRRAAARRRRR1010011 fcvt.l.s rd,frs1                   # rv64f
// 110000000011RRRRRAAARRRRR1010011 fcvt.lu.s rd,frs1                  # rv64f
// 110100000010RRRRRAAARRRRR1010011 fcvt.s.l frd,rs1                   # rv64f
// 110100000011RRRRRAAARRRRR1010011 fcvt.s.lu frd,rs1                  # rv64f
// IIIIIIIIIIIIRRRRR011RRRRR0000111 fld frd,imm(rs1)                   # rv32d
// IIIIIIIRRRRRRRRRR011IIIII0100111 fsd frs2,imm(rs1)                  # rv32d
// RRRRR01RRRRRRRRRRAAARRRRR1000011 fmadd.d frd,frs1,frs2,frs3         # rv32d
// RRRRR01RRRRRRRRRRAAARRRRR1000111 fmsub.d frd,frs1,frs2,frs3         # rv32d
// RRRRR01RRRRRRRRRRAAARRRRR1001011 fnmsub.d frd,frs1,frs2,frs3        # rv32d
// RRRRR01RRRRRRRRRRAAARRRRR1001111 fnmadd.d frd,frs1,frs2,frs3        # rv32d
// 0000001RRRRRRRRRRAAARRRRR1010011 fadd.d frd,frs1,frs2               # rv32d
// 0000101RRRRRRRRRRAAARRRRR1010011 fsub.d frd,frs1,frs2               # rv32d
// 0001001RRRRRRRRRRAAARRRRR1010011 fmul.d frd,frs1,frs2               # rv32d
// 0001101RRRRRRRRRRAAARRRRR1010011 fdiv.d frd,frs1,frs2               # rv32d
// 0010001RRRRRRRRRR000RRRRR1010011 fsgnj.d frd,frs1,frs2              # rv32d
// 0010001RRRRRRRRRR001RRRRR1010011 fsgnjn.d frd,frs1,frs2             # rv32d
// 0010001RRRRRRRRRR010RRRRR1010011 fsgnjx.d frd,frs1,frs2             # rv32d
// 0010101RRRRRRRRRR000RRRRR1010011 fmin.d frd,frs1,frs2               # rv32d
// 0010101RRRRRRRRRR001RRRRR1010011 fmax.d frd,frs1,frs2               # rv32d
// 010000000001RRRRRAAARRRRR1010011 fcvt.s.d frd,frs1                  # rv32d
//  3         2         1         0
// 10987654321098765432109876543210
// 010000100000RRRRRAAARRRRR1010011 fcvt.d.s frd,frs1                  # rv32d
// 010110100000RRRRRAAARRRRR1010011 fsqrt.d frd,frs1                   # rv32d
// 1010001RRRRRRRRRR000RRRRR1010011 fle.d frd,rs1,frs2                 # rv32d
// 1010001RRRRRRRRRR001RRRRR1010011 flt.d frd,rs1,frs2                 # rv32d
// 1010001RRRRRRRRRR010RRRRR1010011 feq.d frd,rs1,frs2                 # rv32d
// 110000100000RRRRRAAARRRRR1010011 fcvt.w.d rd,frs1                   # rv32d
// 110000100001RRRRRAAARRRRR1010011 fcvt.wu.d rd,frs1                  # rv32d
// 110100100000RRRRRAAARRRRR1010011 fcvt.d.w frd,rs1                   # rv32d
// 110100100001RRRRRAAARRRRR1010011 fcvt.d.wu frd,rs1                  # rv32d
// 111000100000RRRRR001RRRRR1010011 fclass.d rd,frs1                   # rv32d
// 110000100010RRRRRAAARRRRR1010011 fcvt.l.d rd,frs1                   # rv64d
// 110000100011RRRRRAAARRRRR1010011 fcvt.lu.d rd,frs1                  # rv64d
// 111000100000RRRRR000RRRRR1010011 fmv.x.d rd,frs1                    # rv64d
// 110100100010RRRRRAAARRRRR1010011 fcvt.d.l frd,rs1                   # rv64d
// 110100100011RRRRRAAARRRRR1010011 fcvt.d.lu frd,rs1                  # rv64d
// 111100100000RRRRR000RRRRR1010011 fmv.d.x frd,rs1                    # rv64d
// 00000000001100000010RRRRR1110011 frcsr rd,csr,rs1                   # rv32f
// 00000000001000000010RRRRR1110011 frrm rd,csr,rs1                    # rv32f
// 00000000000100000010RRRRR1110011 frflags rd,csr,rs1                 # rv32f
// 000000000011RRRRR001RRRRR1110011 fscsr rd,csr,rs1                   # rv32f
// 000000000010RRRRR001RRRRR1110011 fsrm rd,csr,rs1                    # rv32f
// 000000000001RRRRR001RRRRR1110011 fsflags rd,csr,rs1                 # rv32f
//  3         2         1         0
// 10987654321098765432109876543210
// 000000000010IIIII101RRRRR1110011 fsrmi rd,csr,irs1                  # rv32f
// 000000000001IIIII101RRRRR1110011 fsflagsi rd,csr,irs1               # rv32f
